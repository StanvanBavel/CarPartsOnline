name: .NET 5 CI
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    name: .NET 5 Application
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.101' # Check for latest at link at .NET 5 download page
      - run: dotnet build
#       - run: dotnet test


  docker:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'CarPartsOnline'
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./CarPartsOnline/Dockerfile
          push: true
          tags: stanvanbavel/carpartsonline:latest





# name: .NET Core CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:

#   build:

#     strategy:
#       matrix:
#         configuration: [Debug, Release]

#     runs-on: windows-latest  # For a list of available runner types, refer to
#                              # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

#     env:
#       Solution_Name: CarPartsOnline.sln
#       CarPartsOnlineTest_Project_Path: CarPartsOnlineTest\CarPartsOnlineTest.csproj
#       CarPartsOnline_Project_Path: CarPartsOnline\CarPartsOnline.csproj

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#       with:
#         fetch-depth: 0

#     # Install the .NET Core workload
#     - name: Install .NET Core
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: 5.0.12
      

#     # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
#     - name: Setup MSBuild.exe
#       uses: microsoft/setup-msbuild@v1.0.2

#     # Build the application
#     - name: Build with dotnet
#       run: dotnet build $env:Solution_Name

#     # Execute all unit tests in the solution
#     - name: Execute unit tests
#       run: dotnet test $env:CarPartsOnlineTest_Project_Path

# name: .NET Core CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:

#   build:

#     strategy:
#       matrix:
#         configuration: [Debug, Release]

#     runs-on: windows-latest  # For a list of available runner types, refer to
#                              # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

#     env:
#       Solution_Name: CarPartsOnline.sln
#       CarPartsOnlineTest_Path: CarPartsOnline/CarPartsTest/CarPartsTest.csproj
#       CarPartsOnline_Project_Path: CarPartsOnline/CarPartsOnline/CarPartsOnline.csproj

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#       with:
#         fetch-depth: 0

#     # Install the .NET Core workload
#     - name: Install .NET Core
#       uses: actions/setup-dotnet@v2
#       with:
#         dotnet-version: 3.1.x

#     # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
#     - name: Setup MSBuild.exe
#       uses: microsoft/setup-msbuild@v1.0.2

#     # Build the application
#     - name: Build with dotnet
#       run: dotnet build $env:Solution_Name

#     #Execute all unit tests in the solution
#     - name: Execute unit tests
#       run: dotnet test $env:CarPartsOnlineTest_Path

